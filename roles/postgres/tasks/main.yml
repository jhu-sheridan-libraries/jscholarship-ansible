---
- name: make sure to become true
  include: ensure_become.yml

- name: include os-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

  # TODO: test against Debian
- name: install prereqs
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - python-psycopg2

- name: run a version check and install the appropriate postgres
  include: version_check.yml

- name: create database users
  become: true
  become_user:        "{{ postgres_admin_user }}"
  no_log:             "{{ not postgres_debugging }}"
  postgresql_user:
    name:             "{{ item.user }}"
    password:         "{{ item.pass }}"
    encrypted:        true
    db:               "{{ item.db     | default(omit) }}"
    role_attr_flags:  "{{ item.flags  | default(omit) }}"
  with_items:         "{{ postgres_users }}"
  when: postgres_create_users

- name: create databases
  become: true
  become_user:  "{{ postgres_admin_user }}"
  postgresql_db:
    name:       "{{ item.name }}"
    encoding:   "{{ item.encoding | default(omit) }}"
    owner:      "{{ item.owner    | default(omit) }}"
  with_items:   "{{ postgres_databases }}"
  when: postgres_create_databases

- name: get postgres version
  shell: "bash -lc '{{ postgres_bindir }}/postgres --version'"
  register: postgres_version_result
  changed_when: false
  become: false

  # NOTE: regex_search() returns an array of matches, so we will need to use the 'first' filter to make use of the first (and only) value
- set_fact: returned_postgres_version={{ postgres_version_result.stdout | regex_replace('^$','0.0.0') | regex_search('(?P<test>\d+\.\d+(.\d+)*)', '\\g<test>' ) | first }}

- name: test postgres version
  fail:
    msg: "attempted to install postgres {{ postgres_version }}, but something went wrong"
  when: "not returned_postgres_version | version_compare(postgres_version, '>')"

- name: install extensions
  include: extensions.yml
  vars:
    databases:      "{{ postgres_databases }}"
    extra_packages: "{{ postgres_extra_packages }}"
    extensions:     "{{ postgres_extensions }}"
